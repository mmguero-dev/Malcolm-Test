version = 1

[env]
REPO_URL = "https://github.com/idaholab/Malcolm"
REPO_BRANCH = "main"

VERBOSE = "false"
EXTRA = ""
RUNTIME = "docker"
IMAGE_FILE = ""
MALCOLM_PROFILE = "malcolm"
DARK_MODE = "true"
HTTPS = "true"
NGINX_RESOLVER_IPV4 = "true"
NGINX_RESOLVER_IPV6 = "false"
RESTART_MALCOLM = "unless-stopped"
REVERSE_PROXIED = "false"
TRAEFIK_HOST = ""
TRAEFIK_HOST_OPENSEARCH = ""
TRAEFIK_ENTRYPOINT = ""
TRAEFIK_RESOLVER = ""
NETWORK_NAME = ""
OPENSEARCH = "opensearch-local"
OPENSEARCH_MEMORY = ""
OPENSEARCH_URL = ""
OPENSEARCH_SSL_VERIFY = "false"
OPENSEARCH_SECONDARY = "<MALCOLM_CONFIG_NONE>"
OPENSEARCH_SECONDARY_URL = ""
OPENSEARCH_SECONDARY_SSL_VERIFY = "false"
DASHBOARDS_URL = ""
LOGSTASH_HOST = ""
LOGSTASH_MEMORY = ""
LOGSTASH_WORKERS = "2"
LOGSTASH_EXPOSE = "false"
OPENSEARCH_EXPOSE = "false"
FILEBEAT_TCP_EXPOSE = "false"
SFTP_EXPOSE = "false"
SYSLOG_PORT_UDP = "0"
SYSLOG_PORT_TCP = "0"
PCAP_PATH = ""
ZEEK_PATH = ""
SURICATA_PATH = ""
OPENSEARCH_PATH = ""
OPENSEARCH_SNAPSHOT_PATH = ""
DELETE_OLD_PCAP = "false"
DELETE_PCAP_THRESHOLD = ""
EXTRACTED_FILE_MAX_SIZE_THRESHOLD = ""
EXTRACTED_FILE_TOTAL_DISK_USAGE_PERCENT_THRESHOLD = "100"
DELETE_INDEX_THRESHOLD = ""
INDEX_MANAGEMENT_ENABLE = "false"
INDEX_MANAGEMENT_HOT_WARM_ENABLE = "false"
INDEX_MANAGEMENT_OPTIMIZATION_TIME_PERIOD = ""
INDEX_MANAGEMENT_SPI_DATA_RETENTION = ""
INDEX_MANAGEMENT_REPLICAS = "0"
INDEX_MANAGEMENT_WEEKS_OF_HISTORY = "13"
INDEX_MANAGEMENT_SEGMENTS = "1"
AUTO_ARKIME = "true"
AUTO_SURICATA = "true"
SURICATA_RULE_UPDATE = "false"
AUTO_ZEEK = "true"
ZEEK_ICS = "true"
ZEEK_ICS_BEST_GUESS = "true"
REVERSE_DNS = "false"
AUTO_OUI = "true"
AUTO_FREQ = "true"
FILE_EXTRACTION = "interesting"
FILE_PRESERVATION = "quarantined"
EXTRACTED_FILE_SERVER = "true"
EXTRACTED_FILE_SERVER_ZIP = "true"
EXTRACTED_FILE_SERVER_PASSWORD = "infected"
EXTRACTED_FILE_CLAMAV = "true"
EXTRACTED_FILE_YARA = "true"
EXTRACTED_FILE_CAPA = "true"
VIRUSTOTAL_API_KEY = ""
FILE_SCAN_RULE_UPDATE = "false"
NETBOX = "local"
NETBOX_URL = ""
NETBOX_ENRICH = "true"
NETBOX_AUTOPOPULATE = "true"
NETBOX_AUTO_PREFIXES = "true"
NETBOX_SITE_NAME = ""
LIVE_CAPTURE_IFACE = "primary"
LIVE_CAPTURE_FILTER = ""
LIVE_CAPTURE_IFACE_TWEAK = "false"
LIVE_CAPTURE_ARKIME = "false"
LIVE_CAPTURE_ARKIME_NODE_HOST = ""
LIVE_CAPTURE_NETSNIFF = "false"
LIVE_CAPTURE_TCPDUMP = "false"
LIVE_CAPTURE_ZEEK = "false"
LIVE_CAPTURE_SURICATA = "false"
NODE_NAME = "Malcolm"

[[steps]]
[steps.shell]
script = '''
echo "Setting up Malcolm..."

pushd "$HOME"
touch "$HOME"/.hushlogin
mkdir -p "$HOME"/.local/bin "$HOME"/.config/procps "$HOME"/.config/systemd/user

[[ ! -d ./Malcolm ]] && git clone --depth=1 --single-branch --recurse-submodules --shallow-submodules -b "$REPO_BRANCH" "$REPO_URL" Malcolm

rm -f "$HOME"/.bashrc \
      "$HOME"/.bash_aliases \
      "$HOME"/.bash_functions \
      "$HOME"/.config/procps/toprc \
      "$HOME"/.selected_editor \
      "$HOME"/.tmux.conf \
      "$HOME"/.vimrc
ln -s -r -f "$HOME"/Malcolm/malcolm-iso/config/includes.chroot/etc/bash.bash_aliases "$HOME"/.bash_aliases
ln -s -r -f "$HOME"/Malcolm/malcolm-iso/config/includes.chroot/etc/bash.bash_functions "$HOME"/.bash_functions
ln -s -r -f "$HOME"/Malcolm/malcolm-iso/config/includes.chroot/etc/skel/.bashrc "$HOME"/.bashrc
ln -s -r -f "$HOME"/Malcolm/malcolm-iso/config/includes.chroot/etc/skel/.config/procps/toprc "$HOME"/.config/procps/toprc
ln -s -r -f "$HOME"/Malcolm/malcolm-iso/config/includes.chroot/etc/skel/.selected_editor "$HOME"/.selected_editor
ln -s -r -f "$HOME"/Malcolm/malcolm-iso/config/includes.chroot/etc/skel/.tmux.conf "$HOME"/.tmux.conf
ln -s -r -f "$HOME"/Malcolm/malcolm-iso/config/includes.chroot/etc/skel/.vimrc "$HOME"/.vimrc
ln -s -r -f "$HOME"/Malcolm/malcolm-iso/config/includes.chroot/etc/skel/.config/systemd/user/*.service "$HOME"/.config/systemd/user/

OLD_GRUB_HASH=$(sha256sum /etc/default/grub | awk '{print $1}')

EXTRA_ARRAY=()
if [[ -n "$EXTRA" ]]; then
  readarray -td '' EXTRA_ARRAY < <(awk '{ gsub(/\|/,"\0"); print; }' <<<"$EXTRA|"); unset 'EXTRA_ARRAY[-1]';
fi
EXTRA_ARRAY+=( "nginx.env:NGINX_LOG_ACCESS_AND_ERRORS=true" )
EXTRA_ARRAY+=( "netbox-common.env:NETBOX_AUTO_POPULATE_SUBNETS=10.0.0.0/8,!10.100.0.0/16" )

pushd Malcolm
SETTINGS_FILE="$(mktemp --suffix=.json)"
JQ_FILE="$(mktemp --suffix=.jq)"

python3 ./scripts/install.py --verbose "${DEBUG}" --configure --defaults --non-interactive --export-malcolm-config-file "${SETTINGS_FILE}"

( [[ -n "${VERBOSE}" ]] && [[ "${VERBOSE}" != "false" ]] && [[ "${VERBOSE}" != "0" ]] ) && DEBUG=true || DEBUG=false
( [[ "${RUNTIME}" == "docker" ]] || [[ "${MALCOLM_CONTAINER_RUNTIME}" == "podman" ]] ) && ORCH_MODE=DOCKER_COMPOSE || ORCH_MODE=KUBERNETES
( [[ -z "${OPENSEARCH_PATH}" ]] || [[ -z "${OPENSEARCH_SNAPSHOT_PATH}" ]] || [[ -z "${PCAP_PATH}" ]] || [[ -z "${SURICATA_PATH}" ]] || [[ -z "${ZEEK_PATH}" ]] ) && \
  DEFAULT_PATHS=true || DEFAULT_PATHS=false
( [[ "${LIVE_CAPTURE_ARKIME}" == "true" ]] || [[ "${LIVE_CAPTURE_ZEEK}" == "true" ]] || [[ "${LIVE_CAPTURE_SURICATA}" == "true" ]] || [[ "${LIVE_CAPTURE_TCPDUMP}" == "true" ]] || [[ "${LIVE_CAPTURE_NETSNIFF}" == "true" ]] ) && \
  CAPTURE_LIVE=true || CAPTURE_LIVE=false
if [[ "${LIVE_CAPTURE_IFACE}" == "primary" ]]; then
    command -v ip >/dev/null 2>&1 && CAPTURE_IFACE=$(ip route get 255.255.255.255 2>/dev/null | awk '/dev/ {print $4}') || CAPTURE_IFACE='lo'
else
    CAPTURE_IFACE="${LIVE_CAPTURE_IFACE}"
fi

tee "${JQ_FILE}" >/dev/null <<EOF
.configuration.runtimeBin = "${RUNTIME}"
| .configuration.arkimeFreeSpaceG = "${DELETE_PCAP_THRESHOLD}"
| .configuration.arkimeManagePCAP = ${DELETE_OLD_PCAP}
| .configuration.autoArkime = ${AUTO_ARKIME}
| .configuration.autoFreq = ${AUTO_FREQ}
| .configuration.autoOui = ${AUTO_OUI}
| .configuration.autoSuricata = ${AUTO_SURICATA}
| .configuration.autoZeek = ${AUTO_ZEEK}
| .configuration.capaScan = ${EXTRACTED_FILE_CAPA}
| .configuration.captureLiveNetworkTraffic = ${CAPTURE_LIVE}
| .configuration.clamAvScan = ${EXTRACTED_FILE_CLAMAV}
| .configuration.containerNetworkName = "${NETWORK_NAME}"
| .configuration.dashboardsDarkMode = ${DARK_MODE}
| .configuration.dashboardsUrl = "${DASHBOARDS_URL:-http://dashboards:5601/dashboards}"
| .configuration.dockerOrchestrationMode = "${ORCH_MODE}"
| .configuration.exposeFilebeatTcp = ${FILEBEAT_TCP_EXPOSE}
| .configuration.exposeLogstash = ${LOGSTASH_EXPOSE}
| .configuration.exposeOpenSearch = ${OPENSEARCH_EXPOSE}
| .configuration.exposeSFTP = ${SFTP_EXPOSE}
| .configuration.extractedFileMaxPercentThreshold = ${EXTRACTED_FILE_TOTAL_DISK_USAGE_PERCENT_THRESHOLD}
| .configuration.extractedFileMaxSizeThreshold = "${EXTRACTED_FILE_MAX_SIZE_THRESHOLD}"
| .configuration.filebeatTcpDefaults = ${FILEBEAT_TCP_EXPOSE}
| .configuration.fileCarveEnabled = true
| .configuration.fileCarveHttpServeEncryptKey = "${EXTRACTED_FILE_SERVER_PASSWORD}"
| .configuration.fileCarveHttpServer = ${EXTRACTED_FILE_SERVER}
| .configuration.fileCarveHttpServerZip = ${EXTRACTED_FILE_SERVER_ZIP}
| .configuration.fileCarveMode = "${FILE_EXTRACTION}"
| .configuration.filePreserveMode = "${FILE_PRESERVATION}"
| .configuration.fileScanRuleUpdate = ${FILE_SCAN_RULE_UPDATE}
| .configuration.indexDir = "${OPENSEARCH_PATH}"
| .configuration.indexManagementHistoryInWeeks = ${INDEX_MANAGEMENT_WEEKS_OF_HISTORY}
| .configuration.indexManagementHotWarm = ${INDEX_MANAGEMENT_HOT_WARM_ENABLE}
| .configuration.indexManagementOptimizationTimePeriod = "${INDEX_MANAGEMENT_OPTIMIZATION_TIME_PERIOD}"
| .configuration.indexManagementOptimizeSessionSegments = ${INDEX_MANAGEMENT_SEGMENTS}
| .configuration.indexManagementPolicy = ${INDEX_MANAGEMENT_ENABLE}
| .configuration.indexManagementReplicas = ${INDEX_MANAGEMENT_REPLICAS}
| .configuration.indexManagementSpiDataRetention = "${INDEX_MANAGEMENT_SPI_DATA_RETENTION}"
| .configuration.indexPruneThreshold = "${DELETE_INDEX_THRESHOLD}"
| .configuration.indexSnapshotDir = "${OPENSEARCH_SNAPSHOT_PATH}"
| .configuration.liveArkime = ${LIVE_CAPTURE_ARKIME}
| .configuration.liveArkimeNodeHost = "${LIVE_CAPTURE_ARKIME_NODE_HOST}"
| .configuration.liveSuricata = ${LIVE_CAPTURE_SURICATA}
| .configuration.liveZeek = ${LIVE_CAPTURE_ZEEK}
| .configuration.logstashHost = "${LOGSTASH_HOST:-logstash:5044}"
| .configuration.lsMemory = "${LOGSTASH_MEMORY}"
| .configuration.lsWorkers = ${LOGSTASH_WORKERS}
| .configuration.malcolmIcs = ${ZEEK_ICS}
| .configuration.malcolmProfile = "${MALCOLM_PROFILE}"
| .configuration.malcolmRestartPolicy = "${RESTART_MALCOLM}"
| .configuration.netboxAutoPopulate = ${NETBOX_AUTOPOPULATE}
| .configuration.netboxLogstashAutoSubnets = ${NETBOX_AUTO_PREFIXES}
| .configuration.netboxLogstashEnrich = ${NETBOX_ENRICH}
| .configuration.netboxMode = "${NETBOX}"
| .configuration.netboxSiteName = "${NETBOX_SITE_NAME:-Malcolm}"
| .configuration.netboxUrl = "${NETBOX_URL}"
| .configuration.nginxResolverIpv4 = ${NGINX_RESOLVER_IPV4}
| .configuration.nginxResolverIpv6 = ${NGINX_RESOLVER_IPV6}
| .configuration.nginxSSL = ${HTTPS}
| .configuration.opensearchPrimaryMode = "${OPENSEARCH}"
| .configuration.opensearchPrimarySslVerify = ${OPENSEARCH_SSL_VERIFY}
| .configuration.opensearchPrimaryUrl = "${OPENSEARCH_URL:-https://opensearch:9200}"
| .configuration.opensearchSecondaryMode = "${OPENSEARCH_SECONDARY}"
| .configuration.opensearchSecondarySslVerify = ${OPENSEARCH_SECONDARY_SSL_VERIFY}
| .configuration.opensearchSecondaryUrl = "${OPENSEARCH_SECONDARY_URL}"
| .configuration.osMemory = "${OPENSEARCH_MEMORY}"
| .configuration.pcapDir = "${PCAP_PATH}"
| .configuration.pcapFilter = "${LIVE_CAPTURE_FILTER}"
| .configuration.pcapIface = "${CAPTURE_IFACE}"
| .configuration.pcapNetSniff = ${LIVE_CAPTURE_NETSNIFF}
| .configuration.pcapNodeName = "${NODE_NAME}"
| .configuration.pcapTcpDump = ${LIVE_CAPTURE_TCPDUMP}
| .configuration.reverseDns = ${REVERSE_DNS}
| .configuration.suricataLogDir = "${SURICATA_PATH}"
| .configuration.suricataRuleUpdate = ${SURICATA_RULE_UPDATE}
| .configuration.syslogTcpPort = ${SYSLOG_PORT_TCP}
| .configuration.syslogUdpPort = ${SYSLOG_PORT_UDP}
| .configuration.traefikEntrypoint = "${TRAEFIK_ENTRYPOINT}"
| .configuration.traefikHost = "${TRAEFIK_HOST}"
| .configuration.traefikLabels = ${REVERSE_PROXIED}
| .configuration.traefikOpenSearchHost = "${TRAEFIK_HOST_OPENSEARCH}"
| .configuration.traefikResolver = "${TRAEFIK_RESOLVER}"
| .configuration.tweakIface = ${LIVE_CAPTURE_IFACE_TWEAK}
| .configuration.useDefaultStorageLocations = ${DEFAULT_PATHS}
| .configuration.vtotApiKey = "${VIRUSTOTAL_API_KEY}"
| .configuration.yaraScan = ${EXTRACTED_FILE_YARA}
| .configuration.zeekICSBestGuess = ${ZEEK_ICS_BEST_GUESS}
| .configuration.zeekLogDir = "${ZEEK_PATH}"
EOF

jq -f "${JQ_FILE}" "${SETTINGS_FILE}" | sponge "${SETTINGS_FILE}"

python3 ./scripts/install.py --configure --verbose "${DEBUG}" --configure --non-interactive --import-malcolm-config-file "${SETTINGS_FILE}" --extra "${EXTRA_ARRAY[@]}"
rm -f "${SETTINGS_FILE}" "${JQ_FILE}"

if command -v direnv &>/dev/null; then
    eval "$(direnv hook bash)"
    [[ -f "$HOME"/.bashrc ]] && ! grep -q direnv "$HOME"/.bashrc && echo 'eval "$(direnv hook bash)"' >> "$HOME"/.bashrc
    [[ ! -f ./.envrc ]] && echo "export MALCOLM_CONTAINER_RUNTIME=\"$RUNTIME\"" > ./.envrc && direnv allow
fi
popd

popd

NEW_GRUB_HASH=$(sha256sum /etc/default/grub | awk '{print $1}')
( [[ -z "$NEW_GRUB_HASH" ]] || [[ -z "$OLD_GRUB_HASH" ]] || [[ "$NEW_GRUB_HASH" != "$OLD_GRUB_HASH" ]] ) && touch /tmp/needs_reboot && sudo update-grub2

sudo usermod -a -G docker "$USER"
sudo loginctl enable-linger "$USER"
sudo ln -s -r -f /usr/libexec/docker/cli-plugins/docker-compose /usr/local/bin/docker-compose
'''
